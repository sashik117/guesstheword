package pages;

import entity.User;
import java.util.Random;
import java.util.Scanner;
import service.GameService;

public class GameView {

    public void displayGame(Scanner scanner, GameService gameService, User user) {
        // –ú–∞—Å–∏–≤ —Å–ª—ñ–≤ –¥–ª—è –≥—Ä–∏
        String[] words = {
            "—è–±–ª—É–∫–æ", "–±–∞–Ω–∞–Ω", "–ø–µ—Ä–æ", "—Å–æ–±–∞–∫–∞", "–∫–≤—ñ—Ç–∫–∞", "—Ä—ñ—á–∫–∞", "–¥–µ—Ä–µ–≤–æ", "—Å—Ç—ñ–ª", "–º–∞—à–∏–Ω–∞",
            "—Ç–µ–ª–µ—Ñ–æ–Ω", "–∫–æ–º–ø'—é—Ç–µ—Ä", "–∫–Ω–∏–≥–∞", "—à–∫–æ–ª–∞", "–º—ñ—Å—Ç–æ", "—Ä–æ–∑–∞", "—Å–≤—ñ—Ç–ª–æ", "–≥–æ—Ä–∞", "–ø—Ç–∞—Ö",
            "—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä", "–¥—Ä—É–∑—ñ", "—Å–Ω—ñ–≥", "–¥–æ—â", "–≥—Ä–æ—à—ñ", "–º–æ–ª–æ–∫–æ", "—Å—ñ–ª—å", "–∫–∞–≤–∞", "—Ö–ª—ñ–±",
            "–∫–æ–ª–µ—Å–æ", "—Å–æ–Ω—Ü–µ", "–º—ñ—Å—è—Ü—å", "–∑–∏–º–∞", "–ª—ñ—Ç–æ", "–≤–µ—Å–Ω–∞", "–æ—Å—ñ–Ω—å", "—Å–º—ñ—Ö", "–ø—ñ—Å–Ω—è",
            "–∑—É–±–∏", "–ª—ñ—Å", "–º–æ—Ä–µ", "–ø—Ç–∞—à–∫–∞", "–∫–æ—Ä–æ–≤–∞", "—Ä—ñ–∫–∞", "–∫–∞–º—ñ–Ω—å", "–ø–∞–ø—ñ—Ä", "–æ–ª—ñ–≤–µ—Ü—å",
            "—Å—ñ—Ä–Ω–∏–∫", "—Å–æ–≤–∞", "—Å—ñ—Ä–∫–∞", "—Å–≤–∏–Ω—è", "–¥–≤–µ—Ä—ñ", "–≤—ñ–∫–Ω–æ", "–ø–æ–º—ñ–¥–æ—Ä", "—Å–∏—Ä", "—Å–µ–ª–æ",
            "–≤–æ–¥–∞", "–ø—ñ–¥–ª–æ–≥–∞"
        };

        // –í–∏–±—ñ—Ä –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –∑ –º–∞—Å–∏–≤—É
        Random random = new Random();
        String wordToGuess = words[random.nextInt(words.length)].toLowerCase();

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏—Ö —Å–∏–º–≤–æ–ª—ñ–≤ (—Ç—ñ–ª—å–∫–∏ –∫–∏—Ä–∏–ª–∏—Ü—è)
        if (!wordToGuess.matches("[–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ“ë“ê]+")) {
            System.out.println("–ü–æ–º–∏–ª–∫–∞! –°–ª–æ–≤–æ –º—ñ—Å—Ç–∏—Ç—å –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ —Å–∏–º–≤–æ–ª–∏.");
            return;  // –ü–µ—Ä–µ—Ä–∏–≤–∞—î–º–æ –≥—Ä—É, —è–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞
        }

        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        StringBuilder hiddenWord = new StringBuilder(wordToGuess.replaceAll(".", "_"));
        String guessedLetters = "";  // –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –ª—ñ—Ç–µ—Ä–∏
        int attemptsLeft = 15;  // –õ—ñ—á–∏–ª—å–Ω–∏–∫ —Å–ø—Ä–æ–±
        boolean gameWon = false;

        // –ì—Ä–∞ –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è
        System.out.println("********************************************");
        System.out.println("   –ü–æ—á–Ω–µ–º–æ –≥—Ä—É: –í–≥–∞–¥–∞–π —Å–ª–æ–≤–æ!");
        System.out.println("********************************************");

        while (!hiddenWord.toString().equals(wordToGuess) && attemptsLeft > 0) {
            // –í–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
            System.out.println("\n–°–ª–æ–≤–æ: " + hiddenWord);  // –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Å–ª–æ–≤–∞
            System.out.println("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –ª—ñ—Ç–µ—Ä–∏: " + guessedLetters);
            System.out.println("–ó–∞–ª–∏—à–∏–ª–æ—Å—å —Å–ø—Ä–æ–±: " + attemptsLeft);
            System.out.println("===========================================");
            System.out.print("–í–≤–µ–¥—ñ—Ç—å –±—É–∫–≤—É –∞–±–æ '–≤–∏—Ö—ñ–¥' —â–æ–± –≤–∏–π—Ç–∏: ");

            String input = scanner.nextLine().toLowerCase();

            if (input.equals("–≤–∏—Ö—ñ–¥")) {
                System.out.println("–î—è–∫—É—î–º–æ –∑–∞ –≥—Ä—É! –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!");
                break;
            }

            // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –≤–≤–µ–¥–µ–Ω–∞ –æ–¥–Ω–∞ –∫–∏—Ä–∏–ª–∏—á–Ω–∞ –±—É–∫–≤–∞
            if (input.length() == 1 && input.matches("[–∞-—è–ê-–Ø—ñ–Ü—ó–á—î–Ñ“ë“ê]")) {
                if (guessedLetters.contains(input)) {
                    System.out.println(
                        "\u001B[33m" + "‚ùó –í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏ —Ü—é –ª—ñ—Ç–µ—Ä—É!" + "\u001B[0m");
                    continue;
                }

                guessedLetters += input;

                if (wordToGuess.contains(input)) {
                    System.out.println(
                        "\u001B[32m" + "‚úÖ –í—ñ—Ä–Ω–æ! –ë—É–∫–≤–∞ " + input + " —î –≤ —Å–ª–æ–≤—ñ." + "\u001B[0m");
                    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ–≥–æ —Å–ª–æ–≤–∞
                    for (int i = 0; i < wordToGuess.length(); i++) {
                        if (wordToGuess.charAt(i) == input.charAt(0)) {
                            hiddenWord.setCharAt(i, input.charAt(0));
                        }
                    }
                } else {
                    attemptsLeft--; // –í—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è —Å–ø—Ä–æ–±–∏ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –≤–≤–µ–¥–µ–Ω–Ω—ñ
                    System.out.println(
                        "\u001B[31m" + "‚ùå –ù–µ–≤—ñ—Ä–Ω–æ! –ë—É–∫–≤–∞ " + input + " –≤—ñ–¥—Å—É—Ç–Ω—è –≤ —Å–ª–æ–≤—ñ."
                            + "\u001B[0m");
                }
            } else {
                System.out.println(
                    "\u001B[35m" + "‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ª–∏—à–µ –æ–¥–Ω—É –∫–∏—Ä–∏–ª–∏—á–Ω—É –±—É–∫–≤—É."
                        + "\u001B[0m");
            }
        }

        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
        if (hiddenWord.toString().equals(wordToGuess)) {
            System.out.println(
                "\u001B[34m" + "üéâ –í—ñ—Ç–∞—î–º–æ! –í–∏ –≤–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ: " + wordToGuess + " üéâ" + "\u001B[0m");
            gameWon = true;
        } else {
            System.out.println(
                "\u001B[31m" + "üòû –í–∏–±–∞—á—Ç–µ, –≤–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –°–ª–æ–≤–æ –±—É–ª–æ: " + wordToGuess + "\u001B[0m");
        }

        if (gameWon) {
            user.incrementWordsGuessed(); // –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–≥–∞–¥–∞–Ω–∏—Ö —Å–ª—ñ–≤
        }

        user.incrementGamesPlayed(); // –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑—ñ–≥—Ä–∞–Ω–∏—Ö —ñ–≥–æ—Ä
    }
}
